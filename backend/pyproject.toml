[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "app"
version = "2020.0.0"
description = "Lovely fastapi project!"
readme = "README.md"
license = {file = "LICENSE.txt"}
keywords = ["hero", "bacon", "sausage"]
authors=[
    {
        name="Addisu Haile",
        email="addisuhaile87@gmail.com"
    }
]
requires-python = ">=3.10,<4.0"
dependencies = [
    "fastapi[standard]<1.0.0,>=0.115.6",
    "pydantic>2.9.2",
    "python-multipart<1.0.0,>=0.0.17",
    "PyJWT<3.0.0,>=2.10.0",
    "passlib[bcrypt]<2.0.0,>=1.7.4",
    "bcrypt==4.2.1",
    "sqlmodel==0.0.22",
    "pydantic-settings<3.0.0,>=2.6.1",
]

[tool.uvicorn]
dev-dependencies = [
    "pytest<8.0.0,>=7.4.3",
]



[tool.mypy]
strict = true
exclude = ["venv", ".venv", "alembic"]

[tool.ruff]
target-version = "py310"
exclude = ["alembic"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG001", # unused arguments in functions
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "W191",  # indentation contains tabs
    "B904",  # Allow raising exceptions without from e, for HTTPException
]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true
